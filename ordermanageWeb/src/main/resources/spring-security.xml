<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 配置不过滤的资源 -->
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <security:http pattern="/**/favicon.ico" security="none"/>

    <security:http auto-config="true" use-expressions="false">
        <!-- 配置具体的拦截的规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER的角色" -->
        <security:intercept-url pattern="/**" access="ROLE_USER,ROLE_SUPER,ROLE_ORDER"/>
        <!-- 定义跳转的具体的页面 -->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login"
                             username-parameter="username"
                             password-parameter="password"
                             authentication-failure-url="/failer.jsp"
                             default-target-url="/main.jsp"/>
        <!-- 关闭跨域请求 -->
        <security:csrf disabled="true"/>
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.jsp"></security:logout>
    </security:http>

    <!--开启权限管理-->
    <security:global-method-security secured-annotations="enabled" />
    <!--<security:global-method-security jsr250-annotations="enabled" />-->
    <!--<security:global-method-security pre-post-annotations="enabled" />-->

    <!-- 使用数据库中认证用户 -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customerService">
            <!-- 配置解密方式 -->
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--security自带密码加密器-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

    <!--配置标签解析器-->
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" ></bean>
</beans>